#!/bin/sh

# Slackware build script for mplayer2

# Copyright 2010-2013  Widya Walesa <walecha99@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. FURTHERMORE I AM NOT LIABLE IF
# YOUR DATA IS DESTROYED, YOUR HOUSE BURNS DOWN OR YOUR DOG RUNS OFF.

PRGNAM=mplayer2
VERSION=${VERSION:-2.0_20130428}
FFVERSION=2a8c3a7
BUILD=${BUILD:-1}
TAG=${TAG:-_wls}
NUMJOBS=${NUMJOBS:--j2}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
WRK=${WRK:-/tmp/wlsbuild}
PKG=$WRK/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
DOCS="AUTHORS Copy* LICENSE README VERSION"

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -pipe -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -pipe -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -m64 -pipe -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $WRK $PKG $OUTPUT
cd $WRK
rm -rf $PRGNAM-*
tar xvf $CWD/$PRGNAM-*.tar.?z*
cd $PRGNAM-*

# Remove internal libdvdcss codec, use externals libraries
if [ -d libdvdcss ]; then
  rm -rf libdvdcss
fi

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

chmod +x configure

echo "$VERSION" > VERSION
CODECSDIR="/usr/lib${LIBDIRSUFFIX}/codecs"
LANGUAGES="en"

./configure \
  --extra-ldflags="-L/usr/lib${LIBDIRSUFFIX} -lavresample" \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --confdir=/etc/mplayer \
  --codecsdir=${CODECSDIR} \
  --language="${LANGUAGES}" \
  --disable-dvdread-internal \
  --disable-libdvdcss-internal \
  --disable-gif \
  --disable-vdpau \
  --disable-openal \
  --enable-pulse \
  --enable-radio \
  --enable-radio-capture \
  --enable-dvdread \
  --enable-dvdnav \
  --enable-libavresample \
  --enable-runtime-cpudetection \

#  --enable-vaapi \

echo "$VERSION" > VERSION
make
# Build the html documentation (not all languages are available):
( cd DOCS/xml
  for i in $(echo $LANGUAGES | tr , ' ') ; do
    [ -d $i ] && make html-single-$i ;
  done
)
echo "$VERSION" > VERSION
make install DESTDIR=$PKG

# Prepare the configfile:
mkdir -p $PKG/etc/mplayer
cp etc/codecs.conf $PKG/etc/mplayer/codecs.conf.new

# Add codecs dir(?)
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/codecs

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION/
cp -r -p DOCS/tech $PKG/usr/doc/$PRGNAM-$VERSION/
cp -r -p DOCS/HTML $PKG/usr/doc/$PRGNAM-$VERSION/
cp -r -p TOOLS $PKG/usr/doc/$PRGNAM-$VERSION/
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
find $PKG/usr/doc -type d -exec chmod -v 755 {} \;

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-required > $PKG/install/slack-required
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -p -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz

echo "Cleaning up build directory"
cd $WRK; rm -rf $PRGNAM-* $PKG
