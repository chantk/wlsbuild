#!/bin/sh

# Slackware build script for wireshark2

# Copyright 2010-2015  Widya Walesa <walecha99@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. FURTHERMORE I AM NOT LIABLE IF
# YOUR DATA IS DESTROYED, YOUR HOUSE BURNS DOWN OR YOUR DOG RUNS OFF.

PRGNAM=wireshark2
VERSION=${VERSION:-2.0.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_wls}
NUMJOBS=${NUMJOBS:--j7}

CWD=$(pwd)
WRK=${WRK:-/tmp/wlsbuild}
PKG=$WRK/package-$PRGNAM
OUTPUT=/tmp
DOCS="AUTHORS COPYING ChangeLog INSTAL* NEWS README*"

# Build GUI: gtk2, gtk3, qt4, qt5, gtk3+qt4, gtk3+qt5
# Here we are using GTK3 GUI as Slackware already have GTK3. And it worked, while
# Qt-based GUI still crashed.
BUILD_GUI=${BUILD_GUI:-"default"}
# Enable default GUI (gtk2 and qt4). Qt4 GUI crashed.
if [ "$BUILD_GUI" = "default" ]; then
  echo "Building Wireshark GTK+ and Qt GUI (default). Qt4 GUI still crashed."
  WIRESHARKGUI="--with-gtk3=yes --with-qt=4"
# Enable GTK+2 GUI only. Tested. Worked.
elif [ "$BUILD_GUI" = "gtk2" ]; then
  echo "Building Wireshark GTK2 GUI"
  WIRESHARKGUI="--with-gtk2=yes --with-qt=no"
# Enable GTK+3 GUI only. Tested. Worked.
elif [ "$BUILD_GUI" = "gtk3" ]; then
  echo "Building Wireshark GTK3 GUI"
  WIRESHARKGUI="--with-gtk3=yes --with-qt=no"
# Enable Qt4 GUI only. Crashed.
elif [ "$BUILD_GUI" = "qt4" ]; then
  echo "Building Wireshark Qt4 GUI"
  WIRESHARKGUI="--with-gtk2=no --with-gtk3=no --with-qt=4"
# Enable Qt5 GUI. Crashed.
elif [ "$BUILD_GUI" = "qt5" ]; then
  echo "Building Wireshark Qt5"
  WIRESHARKGUI="--with-gtk2=no --with-gtk3=no --with-qt=5"
# Enable GTK3 and Qt4 GUI. Qt4 GUI still crashed.
elif [ "$BUILD_GUI" = "gtk3+qt4" ]; then
  echo "Building Wireshark GTK3 and Qt4"
  WIRESHARKGUI="--with-gtk3=yes --with-qt=4"
# Enable GTK3 and Qt5 GUI. Qt5 GUI still crashed.
elif [ "$BUILD_GUI" = "gtk3+qt5" ]; then
  echo "Building Wireshark GUI GTK3 and Qt5"
  WIRESHARKGUI="--with-gtk3=yes --with-qt=5"
fi

echo "Press CTRL+C now to stop build process and change build options"
echo "Switches are: BUILD_GUI=default|gtk2|gtk3|qt4|qt5|gtk3+qt4|gtk3+qt5"
sleep 5

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -pipe -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -pipe -march=i686 -mtune=i686 -fPIC"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -pipe -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

if [ ! -f $CWD/wireshark-$VERSION.tar.* ]; then
  curl -OLJ -C - https://1.as.dl.wireshark.org/src/wireshark-$VERSION.tar.bz2
fi

rm -rf $PKG
mkdir -p $WRK $PKG
cd $WRK
rm -rf wireshark-$VERSION
tar xvf $CWD/wireshark-$VERSION.tar.?z*
cd wireshark-$VERSION

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

export LC_ALL=C
./autogen.sh

PYTHON=python2 \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --build=$ARCH-slackware-linux \
  --prefix=/usr \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --enable-setuid-install \
  --with-pcap \
  --with-zlib \
  --with-ssl \
  $WIRESHARKGUI \
  || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG
unset LC_ALL

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a ${DOCS} $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -p -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz

echo "Cleaning up build directory"
cd $WRK ; rm -rf $PKG wireshark-$VERSION
