#!/bin/sh

# Slackware build script for wine

# Copyright 2011-2016  Widya Walesa <walecha99@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. FURTHERMORE I AM NOT LIABLE IF
# YOUR DATA IS DESTROYED, YOUR HOUSE BURNS DOWN OR YOUR DOG RUNS OFF.

PRGNAM=wine
VERSION=${VERSION:-2.0_rc2}
SRCVERSION=${SRCVERSION:-2.0-rc2}
STAGING_VERSION=${STAGING_VERSION:-${SRCVERSION}}
BUILD=${BUILD:-1}
TAG=${TAG:-_wls}
NUMJOBS=${NUMJOBS:--j7}
STAGING=${STAGING:-"yes"}
NINE=${NINE:-"yes"}
NINE_VERSION=${NINE_VERSION:-$SRCVERSION}
D3D9_DIR="$PRGNAM-d3d9-patches-$PRGNAM-d3d9-$NINE_VERSION"

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
WRK=${WRK:-/tmp/wlsbuild}
PKG=$WRK/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
DOCS="ANNOUNCE AUTHORS COPY* LICENSE* README* VERSION"

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -pipe -march=i586 -mtune=i686"
  SLKLDFLAGS="-L/lib -L/usr/lib -ldl -lm -lpthread"
  LIBDIRSUFFIX=""
  ENABLE_64=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -pipe -march=i686 -mtune=i686"
  SLKLDFLAGS="-L/lib -L/usr/lib -ldl -lm -lpthread"
  LIBDIRSUFFIX=""
  ENABLE_64=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -pipe -fPIC"
  SLKLDFLAGS="-L/lib64 -L/usr/lib64 -ldl -lm -lpthread"
  LIBDIRSUFFIX="64"
  ENABLE_64="--enable-win64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

if ! bzip2 -t wine-$SRCVERSION.tar.bz2 >/dev/null; then
  rm -f wine-$SRCVERSION.tar.bz2
  unset DOWNLOAD_WINE
  eval `cat $PRGNAM.info | grep "DOWNLOAD_WINE="`
  echo "Downloading `basename $DOWNLOAD_WINE`"
  curl -OLJ -C - $DOWNLOAD_WINE
fi

if ! gzip -t wine-staging-$STAGING_VERSION.tar.gz >/dev/null; then
  rm -f wine-staging-$STAGING_VERSION.tar.gz
  unset DOWNLOAD_STAGING
  eval `cat $PRGNAM.info | grep "DOWNLOAD_STAGING="`
  echo "Downloading `basename $DOWNLOAD_STAGING`"
  curl -OLJ -C - $DOWNLOAD_STAGING
fi

if [ -f wine-d3d9-patches-$PRGNAM-d3d9-$NINE_VERSION.tar.gz ]; then
  if ! gzip -t wine-d3d9-patches-$PRGNAM-d3d9-$NINE_VERSION.tar.gz >/dev/null; then
    rm -f wine-d3d9-patches-$PRGNAM-d3d9-$NINE_VERSION.tar.gz
    unset DOWNLOAD_D3D9
    eval `cat $PRGNAM.info | grep "DOWNLOAD_D3D9="`
    echo "Downloading `basename $DOWNLOAD_D3D9`"
    curl -OLJ -C - $DOWNLOAD_D3D9
  fi
else
  unset DOWNLOAD_D3D9
  eval `cat $PRGNAM.info | grep "DOWNLOAD_D3D9="`
  echo "Downloading `basename $DOWNLOAD_D3D9`"
  curl -OLJ -C - $DOWNLOAD_D3D9
fi

rm -rf $PKG
mkdir -p $WRK $PKG $OUTPUT
cd $WRK
rm -rf $PRGNAM* Wine-*
echo "extracting $PRGNAM-$SRCVERSION"
tar xvf $CWD/$PRGNAM-$SRCVERSION.tar.?z*

cd $PRGNAM-$SRCVERSION

# patch -p1 --verbose < ${CWD}/patches/${PRGNAM}-1.5.26-winegcc.patch
# patch -p1 --verbose < ${CWD}/patches/${PRGNAM}-1.9.5-multilib-portage.patch
# patch -p1 --verbose < ${CWD}/patches/${PRGNAM}-1.7.12-osmesa-check.patch
# patch -p1 --verbose < ${CWD}/patches/${PRGNAM}-1.6-memset-O3.patch

if [ "$STAGING" = "yes" ]; then
    echo "BUILDING WINE STAGING: $STAGING_VERSION"
    tar -xvf $CWD/$PRGNAM-staging-$STAGING_VERSION.tar.gz --strip-components 1
#     ./patches/patchinstall.sh DESTDIR="$(pwd)" --all
#     mv ../$PRGNAM-staging-$SRCVERSION/* .
    make -C patches DESTDIR=$WRK/$PRGNAM-$SRCVERSION install || exit 1
    sed -i -e 's!^loader server: libs/port libs/wine tools.*!& include!' Makefile.in
else
    echo "BUILDING WINE STAGING: FALSE"
    sleep 5
fi

if [ "$NINE" = "yes" ]; then
    echo "BUILDING WINE NINE: $NINE_VERSION"
    tar xvf $CWD/$D3D9_DIR.tar.gz
    if [ "$STAGING" = "yes" ]; then
	patch -p1 < ${D3D9_DIR}/staging-helper.patch
    else
	patch -p1 < ${D3D9_DIR}/d3d9-helper.patch
    fi
    patch -p1 < ${D3D9_DIR}/wine-d3d9.patch
#     ENABLE_NINE="--with-d3dadapter --with-d3dadapter-dri2-fallback"
else
  echo "BUILDING WINE NINE: FALSE"
  sleep 5
fi

# cat $CWD/patches/wine-cjk.patch | patch -p1 || exit 1

sed 's|OpenCL/opencl.h|CL/opencl.h|g' -i configure*

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

autoreconf -fi

echo "Creating build directory $WRK/$PRGNAM"
rm -rf $WRK/$PRGNAM
mkdir -p $WRK/$PRGNAM
cd $WRK/$PRGNAM

../$PRGNAM-$SRCVERSION/configure \
  --program-prefix= --program-suffix= \
  --prefix=/usr --exec-prefix=/usr \
  --bindir=/usr/bin --sbindir=/usr/sbin \
  --libdir=/usr/lib$LIBDIRSUFFIX --includedir=/usr/include \
  --mandir=/usr/man --infodir=/usr/info \
  --sysconfdir=/etc --docdir=/usr/doc/$PRGNAM-$VERSION \
  --localstatedir=/var --sharedstatedir=/var/lib \
  --build=$ARCH-slackware-linux \
  --with-x \
  --with-xattr \
  --with-va \
  --without-gstreamer \
  --enable-largefile \
  --disable-tests \
  ${ENABLE_NINE} \
  ${ENABLE_64} \
  || exit 1

#   --with-xfixes \

make depend || exit 1
make $NUMJOBS || make || exit 1

if [ "$ARCH" = "x86_64" ]; then
  echo "Building WINE 32-bit compat for $ARCH"
  rm -rf $WRK/$PRGNAM-wow64
  mkdir -p $WRK/$PRGNAM-wow64
  cd $WRK/$PRGNAM-wow64

  # Set 32-bit pkgconfig path as needed by gstreamer
  unset PKG_CONFIG_PATH
  export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig"

  ../$PRGNAM-$SRCVERSION/configure \
    --with-wine64=../${PRGNAM} \
    --program-prefix= --program-suffix= \
    --prefix=/usr --exec-prefix=/usr \
    --bindir=/usr/bin --sbindir=/usr/sbin \
    --libdir=/usr/lib --includedir=/usr/include \
    --mandir=/usr/man --infodir=/usr/info \
    --sysconfdir=/etc --docdir=/usr/doc/$PRGNAM-$VERSION \
    --localstatedir=/var --sharedstatedir=/var/lib \
    --build=$ARCH-slackware-linux \
    --with-x \
    --with-xattr \
    --with-xfixes \
    --with-va \
    --without-gstreamer \
    --enable-largefile \
    --disable-tests \
    ${ENABLE_NINE} \
    || exit 1

  make depend || exit 1
  # make CFLAGS+="-march=native -pipe -mstackrealign -mincoming-stack-boundary=2" \
       #CXXFLAGS+="-mstackrealign -mincoming-stack-boundary=2" \

  make $NUMJOBS || make || exit 1
  make install DESTDIR=$PKG || exit 1
  unset PKG_CONFIG_PATH
fi

# Back installing wine 64-bit
cd $WRK/$PRGNAM
unset PKG_CONFIG_PATH
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/lib64/pkgconfig:/usr/lib64/pkgconfig"
make install DESTDIR=$PKG || exit 1

cd $WRK/$PRGNAM-$SRCVERSION

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
 | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -p -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz

echo "Cleaning up build directory"
cd $WRK; rm -rf $PRGNAM* $PKG Wine-*
