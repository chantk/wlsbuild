#!/bin/sh

# Slackware build script for nginx

# Copyright 2011-2012  Widya Walesa <walecha99@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. FURTHERMORE I AM NOT LIABLE IF
# YOUR DATA IS DESTROYED, YOUR HOUSE BURNS DOWN OR YOUR DOG RUNS OFF.

PRGNAM=nginx
VERSION=1.2.3
BUILD=1
TAG=${TAG:-_wls}
NUMJOBS=${NUMJOBS:--j3}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
WRK=${WRK:-/tmp/wlsbuild}
PKG=$WRK/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
DOCS="CHANGES* LICENSE README"

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -pipe -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -pipe -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -pipe -m64 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

# if ! grep "^nginx:" /etc/group >/dev/null ; then
#   echo "Add nginx group: /usr/sbin/groupadd -g 248 nginx"
#   exit 1
# fi
#
# if ! grep "^nginx:" /etc/passwd >/dev/null ; then
#   echo "Add nginx user: /usr/sbin/useradd -g 248 -u 248 -s /bin/false -d /var/lib/nginx nginx"
#   exit 1
# fi

rm -rf $PKG
mkdir -p $WRK $PKG $OUTPUT
cd $WRK
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

EXTRA_MODS="
--with-http_flv_module \
--with-http_ssl_module \
--with-http_gzip_static_module \
"
# --with-http_mp4_module \
# --with-http_random_index_module \
# --with-http_secure_link_module \
# --with-http_degradation_module \
# --with-http_stub_status_module \
# --with-rtsig_module \
# --with-select_module \
# --with-poll_module \
# --with-http_realip_module \
# --with-http_addition_module \
# --with-http_image_filter_module \
# --with-http_sub_module
# --with-http_dav_module \
# --with-http_geoip_module \
# --with-openssl=/usr/lib$LIBDIRSUFFIX \
# --with-http_perl_module \
# --with-http_xslt_module \

MAIL_MOD=""
# MAIL_MOD=" \
# --with-mail \
# --with-mail_ssl_module \
# "

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --sbin-path=/usr/sbin/nginx \
  --conf-path=/etc/nginx/nginx.conf \
  --pid-path=/var/run/nginx/nginx.pid \
  --lock-path=/var/lock/nginx/nginx.lock \
  --error-log-path=/var/log/nginx/error.log \
  --http-log-path=/var/log/nginx/access.log \
  --http-client-body-temp-path=/var/lib/nginx/body/ \
  --http-proxy-temp-path=/var/lib/nginx/proxy/ \
  --http-fastcgi-temp-path=/var/lib/nginx/fcgi/ \
  --http-uwsgi-temp-path=/var/lib/nginx/uwsgi/ \
  --http-scgi-temp-path=/var/lib/nginx/scgi/ \
  --user=nobody \
  --group=nobody \
  --builddir=build \
  $EXTRA_MODS \
  $MAIL_MOD \

make V=1
make install DESTDIR=$PKG

mkdir -p $PKG/usr/man/man8
cp man/nginx.8 $PKG/usr/man/man8

mkdir -p $PKG/etc/rc.d
cat $CWD/rc.nginx > $PKG/etc/rc.d/rc.nginx.new

mv $PKG/etc/nginx/mime.types $PKG/etc/nginx/mime.types.new
mv $PKG/etc/nginx/uwsgi_params $PKG/etc/nginx/uwsgi_params.new
mv $PKG/etc/nginx/fastcgi_params $PKG/etc/nginx/fastcgi_params.new
mv $PKG/etc/nginx/fastcgi.conf $PKG/etc/nginx/fastcgi.conf.new
mv $PKG/etc/nginx/koi-win $PKG/etc/nginx/koi-win.new
mv $PKG/etc/nginx/scgi_params $PKG/etc/nginx/scgi_params.new
mv $PKG/etc/nginx/koi-utf $PKG/etc/nginx/koi-utf.new
mv $PKG/etc/nginx/nginx.conf $PKG/etc/nginx/nginx.conf.new
mv $PKG/etc/nginx/win-utf $PKG/etc/nginx/win-utf.new

mkdir -p $PKG/var/www/nginx
mv $PKG/usr/html $PKG/var/www/nginx

mkdir -p $PKG/var/lock/nginx $PKG/var/lib/nginx
chown -R nobody:nobody $PKG/var/run/nginx $PKG/var/log/nginx $PKG/var/lib/nginx $PKG/var/lock/nginx

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}

echo "Cleaning up build directory"
cd $WRK; rm -rf $PRGNAM-$VERSION $PKG
