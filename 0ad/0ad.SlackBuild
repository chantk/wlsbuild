#!/bin/sh

# Slackware build script for 0ad

# Copyright 2011-2012  Widya Walesa <walecha99@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. FURTHERMORE I AM NOT LIABLE IF
# YOUR DATA IS DESTROYED, YOUR HOUSE BURNS DOWN OR YOUR DOG RUNS OFF.

PRGNAM=0ad
VERSION=r11339
BUILD=1
TAG=${TAG:-_wls}
NUMJOBS=${NUMJOBS:--j4}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
WRK=${WRK:-/tmp/wlsbuild}
PKG=$WRK/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -pipe -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -pipe -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -m64 -pipe -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $WRK $PKG $OUTPUT
cd $WRK
rm -rf $PRGNAM-$VERSION-alpha
tar xvf $CWD/$PRGNAM-$VERSION-alpha-unix-build.tar.xz
cd $PRGNAM-$VERSION-alpha

# Fix boost libraries name for Slackware
sed -i 's:-mt::g' ./build/premake/extern_libs4.lua

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

./build/workspaces/clean-workspaces.sh

LDFLAGS=" -L/usr/lib${LIBDIRSUFFIX}" \
CFLAGS="$SLKCFLAGS" \
CPPFLAGS="$SLKCFLAGS" \
build/workspaces/update-workspaces.sh \
  --bindir=/usr/bin \
  --libdir=/usr/lib$LIBDIRSUFFIX/0ad \
  --datadir=/usr/share/0ad \
  --with-system-enet \
  --with-system-nvtt \
  --with-system-mozjs185

cd build/workspaces/gcc
make CONFIG=Release
cd -

# There is no install script, so we install it manually
mkdir -p $PKG/usr/bin
install -v -m 0755 binaries/system/pyrogenesis $PKG/usr/bin/pyrogenesis
install -v -m 0755 binaries/system/ActorEditor $PKG/usr/bin/ActorEditor
install -v -m 0755 build/resources/0ad.sh $PKG/usr/bin/0ad

mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM
install -v -m 0755 binaries/system/libCollada.so $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/libCollada.so
install -v -m 0755 binaries/system/libAtlasUI.so $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/libAtlasUI.so

# install -v -m 0755 binaries/system/libmozjs185-ps-release.so.1.0 \
#     $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/libmozjs185-ps-release.so.1.0
# install -v -m 0755 binaries/system/libnvcore.so $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/libnvcore.so
# install -v -m 0755 binaries/system/libnvimage.so $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/libnvimage.so
# install -v -m 0755 binaries/system/libnvmath.so $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/libnvmath.so
# install -v -m 0755 binaries/system/libnvtt.so $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/libnvtt.so

mkdir -p $PKG/usr/share/0ad
cp -r binaries/data/* $PKG/usr/share/0ad

mkdir -p $PKG/usr/share/applications
install -v -m 0644 build/resources/0ad.desktop \
  $PKG/usr/share/applications/0ad.desktop

mkdir -p $PKG/usr/share/pixmaps
install -v -m 0644 build/resources/0ad.png $PKG/usr/share/pixmaps/0ad.png

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a *.txt $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-required > $PKG/install/slack-required
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz

echo "Cleaning up build directory"
cd $WRK ; rm -rf $PRGNAM-$VERSION-alpha $PKG
