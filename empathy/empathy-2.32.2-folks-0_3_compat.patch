diff -Naur empathy-2.32.2.orig/configure empathy-2.32.2/configure
--- empathy-2.32.2.orig/configure	2010-11-18 20:56:58.000000000 -0500
+++ empathy-2.32.2/configure	2010-11-18 21:03:28.000000000 -0500
@@ -2623,7 +2623,7 @@
 # Minimal version required
 
 # Hardp deps
-FOLKS_REQUIRED=0.1.15
+FOLKS_REQUIRED=0.3.0
 GCONF_REQUIRED=1.2.0
 GLIB_REQUIRED=2.25.9
 GNUTLS_REQUIRED=2.8.5
diff -Naur empathy-2.32.2.orig/libempathy/empathy-contact.c empathy-2.32.2/libempathy/empathy-contact.c
--- empathy-2.32.2.orig/libempathy/empathy-contact.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy/empathy-contact.c	2010-11-18 21:01:26.000000000 -0500
@@ -703,12 +703,12 @@
 
   /* Set the alias on the persona if possible */
   persona = empathy_contact_get_persona (contact);
-  if (persona != NULL && FOLKS_IS_ALIAS (persona))
+  if (persona != NULL && FOLKS_IS_ALIASABLE (persona))
     {
       DEBUG ("Setting alias for contact %s to %s",
           empathy_contact_get_id (contact), alias);
 
-      folks_alias_set_alias (FOLKS_ALIAS (persona), alias);
+      folks_aliasable_set_alias (FOLKS_ALIASABLE (persona), alias);
     }
 
   if (tp_strdiff (alias, priv->alias))
@@ -726,10 +726,10 @@
     GAsyncResult *result,
     gpointer user_data)
 {
-  FolksGroups *groups = FOLKS_GROUPS (source);
+  FolksGroupable *groupable = FOLKS_GROUPABLE (source);
   GError *error = NULL;
 
-  folks_groups_change_group_finish (groups, result, &error);
+  folks_groupable_change_group_finish (groupable, result, &error);
   if (error != NULL)
     {
       g_warning ("failed to change group: %s", error->message);
@@ -753,8 +753,8 @@
   persona = empathy_contact_get_persona (contact);
   if (persona != NULL)
     {
-      if (FOLKS_IS_GROUPS (persona))
-        folks_groups_change_group (FOLKS_GROUPS (persona), group, is_member,
+      if (FOLKS_IS_GROUPABLE (persona))
+        folks_groupable_change_group (FOLKS_GROUPABLE (persona), group, is_member,
           groups_change_group_cb, contact);
       return;
     }
@@ -918,7 +918,7 @@
   /* Set the persona's groups */
   if (priv->groups != NULL)
     {
-      folks_groups_set_groups (FOLKS_GROUPS (persona), priv->groups);
+      folks_groupable_set_groups (FOLKS_GROUPABLE (persona), priv->groups);
       g_hash_table_destroy (priv->groups);
       priv->groups = NULL;
     }
diff -Naur empathy-2.32.2.orig/libempathy/empathy-individual-manager.c empathy-2.32.2/libempathy/empathy-individual-manager.c
--- empathy-2.32.2.orig/libempathy/empathy-individual-manager.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy/empathy-individual-manager.c	2010-11-18 21:01:37.000000000 -0500
@@ -453,7 +453,7 @@
 
   DEBUG ("removing individual %s (%s)",
       folks_individual_get_id (individual),
-      folks_individual_get_alias (individual));
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)));
 
   folks_individual_aggregator_remove_individual (priv->aggregator, individual,
       aggregator_remove_individual_cb, self);
@@ -464,10 +464,10 @@
     GAsyncResult *result,
     gpointer user_data)
 {
-  FolksGroups *groups = FOLKS_GROUPS (source);
+  FolksGroupable *groupable = FOLKS_GROUPABLE (source);
   GError *error = NULL;
 
-  folks_groups_change_group_finish (groups, result, &error);
+  folks_groupable_change_group_finish (groupable, result, &error);
   if (error != NULL)
     {
       g_warning ("failed to change group: %s", error->message);
@@ -480,7 +480,7 @@
     FolksIndividual *individual,
     const gchar *group)
 {
-  folks_groups_change_group (FOLKS_GROUPS (individual), group, FALSE,
+  folks_groupable_change_group (FOLKS_GROUPABLE (individual), group, FALSE,
       groups_change_group_cb, NULL);
 }
 
diff -Naur empathy-2.32.2.orig/libempathy/empathy-utils.c empathy-2.32.2/libempathy/empathy-utils.c
--- empathy-2.32.2.orig/libempathy/empathy-utils.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy/empathy-utils.c	2010-11-18 21:01:26.000000000 -0500
@@ -739,7 +739,7 @@
 
 TpChannelGroupChangeReason
 tp_channel_group_change_reason_from_folks_groups_change_reason (
-    FolksGroupsChangeReason reason)
+    FolksGroupableChangeReason reason)
 {
   return (TpChannelGroupChangeReason) reason;
 }
diff -Naur empathy-2.32.2.orig/libempathy/empathy-utils.h empathy-2.32.2/libempathy/empathy-utils.h
--- empathy-2.32.2.orig/libempathy/empathy-utils.h	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy/empathy-utils.h	2010-11-18 21:01:26.000000000 -0500
@@ -97,7 +97,7 @@
 TpConnectionPresenceType empathy_folks_presence_type_to_tp (FolksPresenceType type);
 gboolean empathy_folks_individual_contains_contact (FolksIndividual *individual);
 EmpathyContact * empathy_contact_dup_from_folks_individual (FolksIndividual *individual);
-TpChannelGroupChangeReason tp_channel_group_change_reason_from_folks_groups_change_reason (FolksGroupsChangeReason reason);
+TpChannelGroupChangeReason tp_channel_group_change_reason_from_folks_groups_change_reason (FolksGroupableChangeReason reason);
 
 gchar * empathy_get_x509_certificate_hostname (gnutls_x509_crt_t cert);
 
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-contact-widget.c empathy-2.32.2/libempathy-gtk/empathy-contact-widget.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-contact-widget.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-contact-widget.c	2010-11-18 21:01:26.000000000 -0500
@@ -586,11 +586,11 @@
       FolksPersona *persona =
           empathy_contact_get_persona (information->contact);
 
-      if (FOLKS_IS_GROUPS (persona))
+      if (FOLKS_IS_GROUPABLE (persona))
         {
           empathy_groups_widget_set_groupable (
               EMPATHY_GROUPS_WIDGET (information->groups_widget),
-              FOLKS_GROUPS (persona));
+              FOLKS_GROUPABLE (persona));
           gtk_widget_show (information->groups_widget);
 
           return;
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-groups-widget.c empathy-2.32.2/libempathy-gtk/empathy-groups-widget.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-groups-widget.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-groups-widget.c	2010-11-18 21:01:26.000000000 -0500
@@ -40,10 +40,10 @@
 /**
  * SECTION:empathy-groups-widget
  * @title:EmpathyGroupsWidget
- * @short_description: A widget used to edit the groups of a #FolksGroups
+ * @short_description: A widget used to edit the groups of a #FolksGroupable
  * @include: libempathy-gtk/empathy-groups-widget.h
  *
- * #EmpathyGroupsWidget is a widget which lists the groups of a #FolksGroups
+ * #EmpathyGroupsWidget is a widget which lists the groups of a #FolksGroupable
  * (i.e. a #FolksPersona or a #FolksIndividual) and allows them to be added and
  * removed.
  */
@@ -52,7 +52,7 @@
  * EmpathyGroupsWidget:
  * @parent: parent object
  *
- * Widget which displays and allows editing of the groups of a #FolksGroups
+ * Widget which displays and allows editing of the groups of a #FolksGroupable
  * (i.e. a #FolksPersona or #FolksIndividual).
  */
 
@@ -64,7 +64,7 @@
 typedef struct
 {
   /* The object we're actually changing the groups of */
-  FolksGroups *groupable; /* owned */
+  FolksGroupable *groupable; /* owned */
   GtkListStore *group_store; /* owned */
 
   GtkWidget *add_group_entry; /* child widget */
@@ -165,8 +165,8 @@
       EMPATHY_CONTACT_LIST (manager));
   g_object_unref (manager);
 
-  /* Get the list of groups that this #FolksGroups is currently in */
-  my_groups = folks_groups_get_groups (priv->groupable);
+  /* Get the list of groups that this #FolksGroupable is currently in */
+  my_groups = folks_groupable_get_groups (priv->groupable);
 
   for (l = all_groups; l != NULL; l = l->next)
     {
@@ -217,13 +217,13 @@
 }
 
 static void
-change_group_cb (FolksGroups *groupable,
+change_group_cb (FolksGroupable *groupable,
     GAsyncResult *async_result,
     EmpathyGroupsWidget *self)
 {
   GError *error = NULL;
 
-  folks_groups_change_group_finish (groupable, async_result, &error);
+  folks_groupable_change_group_finish (groupable, async_result, &error);
 
   if (error != NULL)
     {
@@ -248,7 +248,7 @@
       COL_ENABLED, TRUE,
       -1);
 
-  folks_groups_change_group (priv->groupable, group, TRUE,
+  folks_groupable_change_group (priv->groupable, group, TRUE,
       (GAsyncReadyCallback) change_group_cb, self);
 }
 
@@ -280,7 +280,7 @@
 
   if (group != NULL)
     {
-      folks_groups_change_group (priv->groupable, group, !was_enabled,
+      folks_groupable_change_group (priv->groupable, group, !was_enabled,
           (GAsyncReadyCallback) change_group_cb, self);
       g_free (group);
     }
@@ -288,7 +288,7 @@
 
 
 static void
-groupable_group_changed_cb (FolksGroups *groups,
+groupable_group_changed_cb (FolksGroupable *groups,
     const gchar *group,
     gboolean is_member,
     EmpathyGroupsWidget *self)
@@ -506,14 +506,14 @@
   /**
    * EmpathyGroupsWidget:groupable:
    *
-   * The #FolksGroups whose group membership is to be edited by the
+   * The #FolksGroupable whose group membership is to be edited by the
    * #EmpathyGroupsWidget.
    */
   g_object_class_install_property (object_class, PROP_GROUPABLE,
       g_param_spec_object ("groupable",
           "Groupable",
-          "The #FolksGroups whose groups are being edited.",
-          FOLKS_TYPE_GROUPS,
+          "The #FolksGroupable whose groups are being edited.",
+          FOLKS_TYPE_GROUPABLE,
           G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
 
   g_type_class_add_private (object_class, sizeof (EmpathyGroupsWidgetPriv));
@@ -521,7 +521,7 @@
 
 /**
  * empathy_groups_widget_new:
- * @groupable: a #FolksGroups, or %NULL
+ * @groupable: a #FolksGroupable, or %NULL
  *
  * Creates a new #EmpathyGroupsWidget to edit the groups of the given
  * @groupable.
@@ -529,9 +529,9 @@
  * Return value: a new #EmpathyGroupsWidget
  */
 GtkWidget *
-empathy_groups_widget_new (FolksGroups *groupable)
+empathy_groups_widget_new (FolksGroupable *groupable)
 {
-  g_return_val_if_fail (groupable == NULL || FOLKS_IS_GROUPS (groupable),
+  g_return_val_if_fail (groupable == NULL || FOLKS_IS_GROUPABLE (groupable),
       NULL);
 
   return GTK_WIDGET (g_object_new (EMPATHY_TYPE_GROUPS_WIDGET,
@@ -543,12 +543,12 @@
  * empathy_groups_widget_get_groupable:
  * @self: an #EmpathyGroupsWidget
  *
- * Get the #FolksGroups whose group membership is being edited by the
+ * Get the #FolksGroupable whose group membership is being edited by the
  * #EmpathyGroupsWidget.
  *
- * Returns: the #FolksGroups associated with @widget, or %NULL
+ * Returns: the #FolksGroupable associated with @widget, or %NULL
  */
-FolksGroups *
+FolksGroupable *
 empathy_groups_widget_get_groupable (EmpathyGroupsWidget *self)
 {
   g_return_val_if_fail (EMPATHY_IS_GROUPS_WIDGET (self), NULL);
@@ -559,19 +559,19 @@
 /**
  * empathy_groups_widget_set_groupable:
  * @self: an #EmpathyGroupsWidget
- * @groupable: the #FolksGroups whose membership is to be edited, or %NULL
+ * @groupable: the #FolksGroupable whose membership is to be edited, or %NULL
  *
- * Change the #FolksGroups whose group membership is to be edited by the
+ * Change the #FolksGroupable whose group membership is to be edited by the
  * #EmpathyGroupsWidget.
  */
 void
 empathy_groups_widget_set_groupable (EmpathyGroupsWidget *self,
-    FolksGroups *groupable)
+    FolksGroupable *groupable)
 {
   EmpathyGroupsWidgetPriv *priv;
 
   g_return_if_fail (EMPATHY_IS_GROUPS_WIDGET (self));
-  g_return_if_fail (groupable == NULL || FOLKS_IS_GROUPS (groupable));
+  g_return_if_fail (groupable == NULL || FOLKS_IS_GROUPABLE (groupable));
 
   priv = GET_PRIV (self);
 
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-groups-widget.h empathy-2.32.2/libempathy-gtk/empathy-groups-widget.h
--- empathy-2.32.2.orig/libempathy-gtk/empathy-groups-widget.h	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-groups-widget.h	2010-11-18 21:01:26.000000000 -0500
@@ -54,12 +54,12 @@
 
 GType empathy_groups_widget_get_type (void) G_GNUC_CONST;
 
-GtkWidget * empathy_groups_widget_new (FolksGroups *groupable);
+GtkWidget * empathy_groups_widget_new (FolksGroupable *groupable);
 
-FolksGroups * empathy_groups_widget_get_groupable (
+FolksGroupable * empathy_groups_widget_get_groupable (
     EmpathyGroupsWidget *self);
 void empathy_groups_widget_set_groupable (EmpathyGroupsWidget *self,
-    FolksGroups *groupable);
+    FolksGroupable *groupable);
 
 G_END_DECLS
 
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-individual-information-dialog.c empathy-2.32.2/libempathy-gtk/empathy-individual-information-dialog.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-individual-information-dialog.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-individual-information-dialog.c	2010-11-18 21:01:37.000000000 -0500
@@ -180,7 +180,7 @@
 
       /* Update the UI */
       gtk_window_set_title (GTK_WINDOW (dialog),
-          folks_individual_get_alias (individual));
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)));
       empathy_individual_widget_set_individual (
           EMPATHY_INDIVIDUAL_WIDGET (priv->individual_widget), individual);
       set_label_visibility (dialog);
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-individual-store.c empathy-2.32.2/libempathy-gtk/empathy-individual-store.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-individual-store.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-individual-store.c	2010-11-18 21:01:37.000000000 -0500
@@ -168,7 +168,7 @@
 
   gtk_tree_store_insert_with_values (self, iter, parent, 0,
       EMPATHY_INDIVIDUAL_STORE_COL_NAME,
-      folks_individual_get_alias (individual),
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)),
       EMPATHY_INDIVIDUAL_STORE_COL_INDIVIDUAL, individual,
       EMPATHY_INDIVIDUAL_STORE_COL_IS_GROUP, FALSE,
       EMPATHY_INDIVIDUAL_STORE_COL_IS_SEPARATOR, FALSE,
@@ -387,12 +387,12 @@
 
   priv = GET_PRIV (self);
 
-  if (EMP_STR_EMPTY (folks_individual_get_alias (individual)))
+  if (EMP_STR_EMPTY (folks_aliasable_get_alias (FOLKS_ALIASABLE (individual))))
     return;
 
   if (priv->show_groups)
     {
-      group_set = folks_individual_get_groups (individual);
+      group_set = folks_groupable_get_groups (FOLKS_GROUPABLE (individual));
       groups = g_hash_table_get_keys (group_set);
     }
 
@@ -443,8 +443,6 @@
           individual, flags);
     }
   g_list_free (groups);
-  if (group_set != NULL)
-    g_hash_table_unref (group_set);
 
   if (priv->show_groups &&
       folks_favourite_get_is_favourite (FOLKS_FAVOURITE (individual)))
@@ -527,7 +525,8 @@
   ShowActiveData *data;
 
   DEBUG ("Individual'%s' now active, and %s be removed",
-      folks_individual_get_alias (individual), remove_ ? "WILL" : "WILL NOT");
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)),
+      remove_ ? "WILL" : "WILL NOT");
 
   data = g_slice_new0 (ShowActiveData);
 
@@ -571,12 +570,12 @@
   if (data->remove)
     {
       DEBUG ("Individual'%s' active timeout, removing item",
-          folks_individual_get_alias (data->individual));
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (data->individual)));
       individual_store_remove_individual (data->self, data->individual);
     }
 
   DEBUG ("Individual'%s' no longer active",
-      folks_individual_get_alias (data->individual));
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (data->individual)));
 
   individual_store_contact_set_active (data->self,
       data->individual, FALSE, TRUE);
@@ -605,7 +604,7 @@
   if (error != NULL)
     {
       DEBUG ("failed to retrieve pixbuf for individual %s: %s",
-          folks_individual_get_alias (individual),
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)),
           error->message);
       g_clear_error (&error);
     }
@@ -673,12 +672,12 @@
     }
 
   /* Get online state now. */
-  now_online = folks_individual_is_online (individual);
+  now_online = folks_presence_is_online (FOLKS_PRESENCE (individual));
 
   if (!in_list)
     {
       DEBUG ("Individual'%s' in list:NO, should be:YES",
-          folks_individual_get_alias (individual));
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)));
 
       individual_store_add_individual (self, individual);
 
@@ -692,7 +691,7 @@
   else
     {
       DEBUG ("Individual'%s' in list:YES, should be:YES",
-          folks_individual_get_alias (individual));
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)));
 
       /* Get online state before. */
       if (iters && g_list_length (iters) > 0)
@@ -758,11 +757,11 @@
           EMPATHY_INDIVIDUAL_STORE_COL_ICON_STATUS, pixbuf_status,
           EMPATHY_INDIVIDUAL_STORE_COL_PIXBUF_AVATAR_VISIBLE, show_avatar,
           EMPATHY_INDIVIDUAL_STORE_COL_NAME,
-            folks_individual_get_alias (individual),
+            folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)),
           EMPATHY_INDIVIDUAL_STORE_COL_PRESENCE_TYPE,
-            folks_individual_get_presence_type (individual),
+            folks_presence_get_presence_type (FOLKS_PRESENCE (individual)),
           EMPATHY_INDIVIDUAL_STORE_COL_STATUS,
-            folks_individual_get_presence_message (individual),
+            folks_presence_get_presence_message (FOLKS_PRESENCE (individual)),
           EMPATHY_INDIVIDUAL_STORE_COL_COMPACT, priv->is_compact,
           EMPATHY_INDIVIDUAL_STORE_COL_IS_GROUP, FALSE,
           EMPATHY_INDIVIDUAL_STORE_COL_IS_ONLINE, now_online,
@@ -801,7 +800,7 @@
     EmpathyIndividualStore *self)
 {
   DEBUG ("Individual'%s' updated, checking roster is in sync...",
-      folks_individual_get_alias (individual));
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)));
 
   individual_store_contact_update (self, individual);
 }
@@ -1349,8 +1348,9 @@
   g_return_val_if_fail (individual_a != NULL || individual_b != NULL, 0);
 
   /* alias */
-  ret_val = g_utf8_collate (folks_individual_get_alias (individual_a),
-      folks_individual_get_alias (individual_b));
+  ret_val = g_utf8_collate (
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (individual_a)),
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (individual_b)));
 
   if (ret_val != 0)
     goto out;
@@ -1421,8 +1421,10 @@
   /* If we managed to get this far, we can start looking at
    * the presences.
    */
-  folks_presence_type_a = folks_individual_get_presence_type (individual_a);
-  folks_presence_type_b = folks_individual_get_presence_type (individual_b);
+  folks_presence_type_a =
+      folks_presence_get_presence_type (FOLKS_PRESENCE (individual_a));
+  folks_presence_type_b =
+      folks_presence_get_presence_type (FOLKS_PRESENCE (individual_b));
   tp_presence_a = empathy_folks_presence_type_to_tp (folks_presence_type_a);
   tp_presence_b = empathy_folks_presence_type_to_tp (folks_presence_type_b);
 
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-individual-view.c empathy-2.32.2/libempathy-gtk/empathy-individual-view.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-individual-view.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-individual-view.c	2010-11-18 21:01:37.000000000 -0500
@@ -236,10 +236,10 @@
     GAsyncResult *result,
     gpointer user_data)
 {
-  FolksGroups *groups = FOLKS_GROUPS (source);
+  FolksGroupable *groupable = FOLKS_GROUPABLE (source);
   GError *error = NULL;
 
-  folks_groups_change_group_finish (groups, result, &error);
+  folks_groupable_change_group_finish (groupable, result, &error);
   if (error != NULL)
     {
       g_warning ("failed to change group: %s", error->message);
@@ -385,13 +385,13 @@
 
   if (new_group != NULL)
     {
-      folks_groups_change_group (FOLKS_GROUPS (individual), new_group, TRUE,
+      folks_groupable_change_group (FOLKS_GROUPABLE (individual), new_group, TRUE,
           groups_change_group_cb, NULL);
     }
 
   if (old_group != NULL && action == GDK_ACTION_MOVE)
     {
-      folks_groups_change_group (FOLKS_GROUPS (individual), old_group,
+      folks_groupable_change_group (FOLKS_GROUPABLE (individual), old_group,
           FALSE, groups_change_group_cb, NULL);
     }
 }
@@ -624,7 +624,7 @@
         }
 
       if (individual != NULL &&
-          folks_individual_is_online (individual) &&
+          folks_presence_is_online (FOLKS_PRESENCE (individual)) &&
           (caps & EMPATHY_CAPABILITIES_FT))
         {
           gdk_drag_status (context, GDK_ACTION_COPY, time_);
@@ -1612,7 +1612,7 @@
     return (priv->show_offline || is_online);
 
   /* check alias name */
-  str = folks_individual_get_alias (individual);
+  str = folks_aliasable_get_alias (FOLKS_ALIASABLE (individual));
 
   if (empathy_live_search_match (live, str))
     return TRUE;
@@ -2318,7 +2318,7 @@
       text =
           g_strdup_printf (_
           ("Do you really want to remove the contact '%s'?"),
-          folks_individual_get_alias (individual));
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)));
       if (individual_view_remove_dialog_show (parent, _("Removing contact"),
               text))
         {
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-individual-widget.c empathy-2.32.2/libempathy-gtk/empathy-individual-widget.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-individual-widget.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-individual-widget.c	2010-11-18 21:01:26.000000000 -0500
@@ -437,7 +437,7 @@
     {
       empathy_groups_widget_set_groupable (
           EMPATHY_GROUPS_WIDGET (priv->groups_widget),
-          FOLKS_GROUPS (priv->individual));
+          FOLKS_GROUPABLE (priv->individual));
       gtk_widget_show (priv->groups_widget);
     }
   else
@@ -761,8 +761,8 @@
 
               /* Add a marker to the map */
               marker = champlain_marker_new_with_text (
-                  folks_alias_get_alias (FOLKS_ALIAS (persona)), NULL, NULL,
-                  NULL);
+                  folks_aliasable_get_alias (FOLKS_ALIASABLE (persona)), NULL,
+                  NULL, NULL);
               champlain_base_marker_set_position (
                   CHAMPLAIN_BASE_MARKER (marker), lat, lon);
               clutter_container_add (CLUTTER_CONTAINER (layer), marker, NULL);
@@ -1058,7 +1058,7 @@
         }
       else
         {
-          folks_alias_set_alias (FOLKS_ALIAS (priv->individual), alias);
+          folks_aliasable_set_alias (FOLKS_ALIASABLE (priv->individual), alias);
         }
     }
 
@@ -1133,12 +1133,12 @@
   if (GTK_IS_ENTRY (alias_widget))
     {
       gtk_entry_set_text (GTK_ENTRY (alias_widget),
-          folks_alias_get_alias (FOLKS_ALIAS (folks_object)));
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (folks_object)));
     }
   else
     {
       gtk_label_set_label (GTK_LABEL (alias_widget),
-          folks_alias_get_alias (FOLKS_ALIAS (folks_object)));
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (folks_object)));
     }
 }
 
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-linking-dialog.c empathy-2.32.2/libempathy-gtk/empathy-linking-dialog.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-linking-dialog.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-linking-dialog.c	2010-11-18 21:01:37.000000000 -0500
@@ -180,7 +180,7 @@
       /* Show a confirmation dialogue first */
       dialog = gtk_message_dialog_new (GTK_WINDOW (self), GTK_DIALOG_MODAL,
           GTK_MESSAGE_WARNING, GTK_BUTTONS_NONE, _("Unlink meta-contact '%s'?"),
-          folks_individual_get_alias (individual));
+          folks_aliasable_get_alias (FOLKS_ALIASABLE (individual)));
       gtk_message_dialog_format_secondary_text (GTK_MESSAGE_DIALOG (dialog),
           _("Are you sure you want to unlink this meta-contact? This will "
             "completely split the meta-contact into the contacts it "
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-persona-store.c empathy-2.32.2/libempathy-gtk/empathy-persona-store.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-persona-store.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-persona-store.c	2010-11-18 21:01:26.000000000 -0500
@@ -142,7 +142,7 @@
   ShowActiveData *data;
 
   DEBUG ("Contact:'%s' now active, and %s be removed",
-      folks_alias_get_alias (FOLKS_ALIAS (persona)),
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (persona)),
       remove_ ? "WILL" : "WILL NOT");
 
   data = g_slice_new0 (ShowActiveData);
@@ -212,7 +212,8 @@
 static gboolean
 persona_active_cb (ShowActiveData *data)
 {
-  const gchar *alias = folks_alias_get_alias (FOLKS_ALIAS (data->persona));
+  const gchar *alias =
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (data->persona));
 
   if (data->remove)
     {
@@ -234,7 +235,7 @@
     EmpathyPersonaStore *self)
 {
   DEBUG ("Contact:'%s' updated, checking roster is in sync...",
-      folks_alias_get_alias (FOLKS_ALIAS (persona)));
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (persona)));
 
   update_persona (self, persona);
 }
@@ -288,7 +289,7 @@
 
   priv = GET_PRIV (self);
 
-  alias = folks_alias_get_alias (FOLKS_ALIAS (persona));
+  alias = folks_aliasable_get_alias (FOLKS_ALIASABLE (persona));
   if (EMP_STR_EMPTY (alias))
     return;
 
@@ -407,7 +408,7 @@
   const gchar *alias;
 
   path = find_persona (self, persona);
-  alias = folks_alias_get_alias (FOLKS_ALIAS (persona));
+  alias = folks_aliasable_get_alias (FOLKS_ALIASABLE (persona));
 
   if (path == NULL)
     {
@@ -551,8 +552,9 @@
   g_return_val_if_fail (persona_a != NULL || persona_b != NULL, 0);
 
   /* alias */
-  ret_val = g_utf8_collate (folks_alias_get_alias (FOLKS_ALIAS (persona_a)),
-          folks_alias_get_alias (FOLKS_ALIAS (persona_b)));
+  ret_val = g_utf8_collate (
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (persona_a)),
+      folks_aliasable_get_alias (FOLKS_ALIASABLE (persona_b)));
 
   if (ret_val != 0)
     goto out;
diff -Naur empathy-2.32.2.orig/libempathy-gtk/empathy-ui-utils.c empathy-2.32.2/libempathy-gtk/empathy-ui-utils.c
--- empathy-2.32.2.orig/libempathy-gtk/empathy-ui-utils.c	2010-11-18 20:56:18.000000000 -0500
+++ empathy-2.32.2/libempathy-gtk/empathy-ui-utils.c	2010-11-18 21:01:37.000000000 -0500
@@ -231,7 +231,8 @@
 	FolksPresenceType folks_presence;
 	TpConnectionPresenceType presence;
 
-	folks_presence = folks_individual_get_presence_type (individual);
+	folks_presence =
+	    folks_presence_get_presence_type (FOLKS_PRESENCE (individual));
 	presence = empathy_folks_presence_type_to_tp (folks_presence);
 
 	return empathy_icon_name_for_presence (presence);
